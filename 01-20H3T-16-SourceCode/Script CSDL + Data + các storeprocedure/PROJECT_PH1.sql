ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;
ALTER SESSION SET NLS_DATE_FORMAT = 'DD/MM/YYYY';


drop table NHANVIEN cascade constraints;
drop table DEAN cascade constraints;
drop table PHONGBAN cascade constraints;
drop table PHANCONG cascade constraints;


CREATE TABLE NHANVIEN(
    MANV VARCHAR(10) NOT NULL,
    TENNV NVARCHAR2(100),
    PHAI NUMBER(1) NOT NULL,
    NGAYSINH DATE,
    DIACHI NVARCHAR2(100),
    SDT VARCHAR(10) UNIQUE,
    LUONG NUMBER(20,3),
    PHUCAP NUMBER(10,3),
    VAITRO NVARCHAR2(50),
    MANQL VARCHAR(10),
    PHG VARCHAR(10),
    
    CONSTRAINT PK_NHANVIEN PRIMARY KEY(MANV)
);

CREATE TABLE PHONGBAN (
    MAPB VARCHAR(10) NOT NULL,
    TENPB NVARCHAR2(50),
    TRPHG VARCHAR(10),
    
    CONSTRAINT PK_PHONGBAN PRIMARY KEY(MAPB)
);

CREATE TABLE DEAN (
    MADA VARCHAR(10) NOT NULL,
    TENDA NVARCHAR2(100),
    NGAYBD DATE,
    PHONG VARCHAR(10),
    
    CONSTRAINT PK_DEAN PRIMARY KEY(MADA)
);

CREATE TABLE PHANCONG(
    PC_MADA VARCHAR(10) NOT NULL,
    PC_MANV VARCHAR(10) NOT NULL,
    THOIGIAN DATE,
    
    CONSTRAINT PK_PHANCONG PRIMARY KEY(PC_MADA,PC_MANV)
);

/*
    FOREIGN KEYS
*/

ALTER TABLE NHANVIEN
ADD CONSTRAINT FK_NHANVIEN_MANQL FOREIGN KEY (MANQL)
REFERENCES NHANVIEN(MANV);

ALTER TABLE NHANVIEN
ADD CONSTRAINT FK_NHANVIEN_PHG FOREIGN KEY (PHG)
REFERENCES PHONGBAN(MAPB);

ALTER TABLE PHONGBAN
ADD CONSTRAINT FK_PHONGBAN_TRPHG FOREIGN KEY (TRPHG)
REFERENCES NHANVIEN(MANV);

ALTER TABLE DEAN
ADD CONSTRAINT FK_DEAN_PHONG FOREIGN KEY (PHONG)
REFERENCES PHONGBAN(MAPB);

ALTER TABLE PHANCONG
ADD CONSTRAINT FK_PHANCONG_MADA FOREIGN KEY (PC_MADA)
REFERENCES DEAN(MADA);


ALTER TABLE PHANCONG
ADD CONSTRAINT FK_PHANCONG_MANV FOREIGN KEY (PC_MANV)
REFERENCES NHANVIEN(MANV);
/
--T?O M?I USER
CREATE OR REPLACE PROCEDURE GRANT_NEWUSER
(USER_NAME IN NVARCHAR2,PASS_WORD IN NVARCHAR2)
AUTHID CURRENT_USER 
AS
    TMP_COUNT INT;
BEGIN
    SELECT COUNT(*) INTO TMP_COUNT FROM ALL_USERS  WHERE UPPER(USERNAME) = UPPER(USER_NAME);
    IF(TMP_COUNT != 0) THEN
        RAISE_APPLICATION_ERROR(-20000,'USER DA TON TAI'); 
    ELSE
        IF PASS_WORD IS NOT NULL THEN
            EXECUTE IMMEDIATE('CREATE USER '|| USER_NAME||' IDENTIFIED BY '||PASS_WORD);
        ELSE
            EXECUTE IMMEDIATE('CREATE USER '|| USER_NAME);
        END IF;
        EXECUTE IMMEDIATE('GRANT CREATE SESSION TO '||USER_NAME);
    END IF;
END;
/
--XÓA USER
CREATE OR REPLACE PROCEDURE DROP_USER
(USER_NAME IN VARCHAR2)
AUTHID CURRENT_USER 
AS
    TMP_COUNT INT;
BEGIN
    SELECT COUNT(*) INTO TMP_COUNT FROM ALL_USERS WHERE UPPER(USERNAME) = UPPER(USER_NAME);
    IF(TMP_COUNT != 0) THEN
        EXECUTE IMMEDIATE('DROP USER '|| USER_NAME || ' CASCADE');
    ELSE 
         RAISE_APPLICATION_ERROR(-20000,'USER KHONG TON TAI'); 
    END IF;
END;
/
--T?O ROLE
CREATE OR REPLACE PROCEDURE GRANT_NEWROLE(ROLE_NAME IN VARCHAR2,PASS_WORD IN VARCHAR2)
AUTHID CURRENT_USER 
AS
    TMP_QUERY VARCHAR(100);
BEGIN
    IF(PASS_WORD IS NULL) THEN
        TMP_QUERY := 'CREATE ROLE '|| ROLE_NAME;
        EXECUTE IMMEDIATE (TMP_QUERY);
    ELSE
        TMP_QUERY := 'CREATE ROLE '|| ROLE_NAME||' IDENTIFIED BY '||PASS_WORD;
        EXECUTE IMMEDIATE (TMP_QUERY);
    END IF;
    EXCEPTION
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20000,'ROLE DA TON TAI'); 

END;
/




--XÓA ROLE
CREATE OR REPLACE PROCEDURE DROP_ROLE(ROLE_NAME IN VARCHAR2)
AUTHID CURRENT_USER 
AS
    TMP_QUERY VARCHAR(100);
    TMP_COUNT INT;
BEGIN
    SELECT COUNT(*) INTO TMP_COUNT FROM DBA_ROLES WHERE UPPER(ROLE) = UPPER(ROLE_NAME);
    IF TMP_COUNT > 0 THEN
        TMP_QUERY := 'DROP ROLE '|| ROLE_NAME;
        EXECUTE IMMEDIATE (TMP_QUERY);
    ELSE
        RAISE_APPLICATION_ERROR(-20000,'ROLE KHONG TON TAI');
    END IF;
         
END;
/
--CH?NH S?A PASSWORD USER
CREATE OR REPLACE PROCEDURE ALTER_USER(USER_NAME IN VARCHAR2,PASS_WORD IN VARCHAR2)
AUTHID CURRENT_USER
IS
TMP_COUNT INT;
BEGIN
    SELECT COUNT(*) INTO TMP_COUNT FROM ALL_USERS WHERE UPPER(USERNAME) = UPPER(USER_NAME);
    IF(TMP_COUNT != 0) THEN
        EXECUTE IMMEDIATE('ALTER USER '|| USER_NAME||' IDENTIFIED BY '||PASS_WORD);
    ELSE 
            RAISE_APPLICATION_ERROR(-20000,'USER KHONG TON TAI'); 
    END IF;
END;
/
--CH?NH S?A ROLE
CREATE OR REPLACE PROCEDURE ALTER_ROLE(ROLE_NAME IN VARCHAR2,PASS_WORD IN VARCHAR2)
AUTHID CURRENT_USER
IS
    TMP_COUNT INT;
    TMP_QUERY VARCHAR2(100);
BEGIN
    IF(PASS_WORD='') THEN
    TMP_QUERY :='ALTER ROLE '|| ROLE_NAME|| ' NOT IDENTIFIED';
    EXECUTE IMMEDIATE(TMP_QUERY);
    ELSIF(PASS_WORD!=' ') THEN
    TMP_QUERY :='ALTER ROLE '|| ROLE_NAME|| ' IDENTIFIED BY'|| PASS_WORD;
    END IF;
END;

/
--PHÂN QUY?N CHO ROLE 
CREATE OR REPLACE PROCEDURE GRANT_PRIVS_TOROLE(ROLE_NAME IN VARCHAR2, PRIVS_NAME IN VARCHAR2,TABLE_NAME IN VARCHAR2)
AUTHID CURRENT_USER 
IS
TMP_QUERY VARCHAR2(100);
BEGIN 
    TMP_QUERY := 'GRANT '||PRIVS_NAME|| ' ON ' ||TABLE_NAME ||' TO ' ||ROLE_NAME;
    EXECUTE IMMEDIATE (TMP_QUERY); 
END;

/


--THU H?I QUY?N C?A ROLE
CREATE OR REPLACE PROCEDURE REVOKE_PRIVS_TOROLE(ROLE_NAME IN VARCHAR2, PRIV IN VARCHAR2,TABLE_NAME IN VARCHAR2)
AUTHID CURRENT_USER 
IS
TMP_QUERY VARCHAR(100);
TMP_COUNT INT;
EXCEPTION_USERNAME EXCEPTION;
BEGIN
SELECT COUNT(*) INTO TMP_COUNT  FROM DBA_TAB_PRIVS WHERE  UPPER(GRANTEE) = UPPER(ROLE_NAME) AND UPPER(TABLE_NAME) = UPPER(TABLE_NAME) AND UPPER(PRIVILEGE) = UPPER(PRIV);
IF(TMP_COUNT > 0) THEN
    TMP_QUERY:='REVOKE '||PRIV||' ON ' ||TABLE_NAME||' FROM ' ||ROLE_NAME;
    EXECUTE IMMEDIATE (TMP_QUERY);
ELSE
    RAISE_APPLICATION_ERROR(-20001, 'Quyen hoac Role khong ton tai');
END IF;
END;
/
--C?P QUY?N CHO USER
CREATE OR REPLACE PROCEDURE GRANT_PRIVS_TOUSER(USER_NAME IN VARCHAR2, PRIVS_NAME IN VARCHAR2,TABLE_NAME IN VARCHAR2,GRANT_OPTION IN VARCHAR2 )
AUTHID CURRENT_USER 
IS
TMP_COUNT INT;
TMP_QUERY VARCHAR2(100);
BEGIN 
SELECT COUNT(*) INTO TMP_COUNT FROM ALL_USERS WHERE UPPER(USERNAME) = UPPER(USER_NAME);
IF(TMP_COUNT!=0) THEN
    IF(GRANT_OPTION='NO') THEN
    TMP_QUERY:='GRANT '||PRIVS_NAME|| ' ON ' ||TABLE_NAME ||' TO ' ||USER_NAME;
    EXECUTE IMMEDIATE (TMP_QUERY);
   
    ELSIF(GRANT_OPTION='YES') THEN
    TMP_QUERY:='GRANT '||PRIVS_NAME|| ' ON ' ||TABLE_NAME ||' TO ' ||USER_NAME||' WITH GRANT OPTION' ;
    END IF;
EXECUTE IMMEDIATE (TMP_QUERY);
ELSE 
RAISE_APPLICATION_ERROR(-20000,'USER CHUA TON TAI');
END IF;
END;
/
--THU H?I QUY?N CHO USER
CREATE OR REPLACE PROCEDURE REVOKE_OBJECT_PRIVS_USER(USER_NAME IN VARCHAR2, PRIV IN VARCHAR2, A_OBJECT IN VARCHAR2)
AUTHID CURRENT_USER IS
TMP_QUERY VARCHAR(100);
TMP_COUNT INT;
BEGIN
SELECT COUNT(*) INTO TMP_COUNT  FROM DBA_TAB_PRIVS WHERE  UPPER(GRANTEE) = UPPER(USER_NAME) AND UPPER(TABLE_NAME) = UPPER(A_OBJECT) AND UPPER(PRIVILEGE) = UPPER(PRIV);
IF(TMP_COUNT > 0) THEN
    TMP_QUERY:='REVOKE '||PRIV||' ON ' ||A_OBJECT||' FROM ' ||USER_NAME;
    EXECUTE IMMEDIATE (TMP_QUERY);
ELSE
    RAISE_APPLICATION_ERROR(-20001, 'Quyen hoac User khong ton tai');
END IF;
END;



