<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAB7VJREFUaEPtmXlUVNcdx4UZmO3NPs7IMMwwwyaBgUEYXBDFpWJATHAjGTiYoBYU
        JCogLkFC4lJsWncBFdMkjdEctcaY7cTELB6PicnRthpr2sae1rbJMQdlCTEg+fV335v04HDfYzAR/+F7
        zuefmXe/93vvfXebGTakIQ2+REgkMgnJReb6kI2kIXGIBWGQ+67hgWJxNaPRXBSJxd0qvaHdHu+8ET8+
        /WZqVnZbWu6s1pTM6e3x6RM6opJGtZojIloN5tBWhVr9bZBE0hUQEAAikeh2sFTa+SPEh3zeG/JZsETa
        KVUoriu12lNYbwESyCa4S4kkMtkzyLdpubO/q3zuRWj602V47ourd0XTHz+HnecusDScv9jn+70Xr7Df
        bX7vQ1i8dSdEJae0YydcwhzhXJyBSSVnlB9Hu1M7nj11uk9lg4VnbU0Pjsg1zGPgYvknsVyp/Ch97rzv
        9v/l71TjwWRKfuH3CpXqiDdb/xKLxRU4fB3Nl/9GNRxsGi9cApmC6cRoMVxCYUnwnW/b+NZJqtn9IvOx
        oi7s2BpvRkHlOlxJrTST+0lF8/Og1OrOeTPySyqXNz5UVv4DzeR+Uv/O+yBXqb7yxuQXrr+fLN3dRDXx
        hy2nz8LM4hIY6YyHESEjQKPVgNUeDu6MifDo6idxmTxPLdcf286cA+zcNm9MfjEa7ZdPHTtBNemP8oa9
        oNNpoCr/QTizuwr+dXgj/Pvor+Bsw0o4WLsACh5MA71BD0++cpRaXojtZz8DiVTW7o3JL1yurm148x2q
        iRC1R4+DQa+FT/esgtundvHyxuYyfE4HA+2kp4+/AXgSuOqNyS8pw3xdf/J9qgkfzZf/ClaHne1lWmhf
        XqopAkdMNFuO5kdjWVMzKHW6096Y/MKt+5/rT7xNNeFj2Z5mcCfEUMPyMXVMAhTU1FL9aBSsqwOZUrnP
        G5NfOIkvrz10hGrCx+Q5c2Bb+TxqUD4+aaoGc5gF/N3psxYWd2O8VVxKASn1+o8r9r9ANeEjNtEJH+6o
        oAYVwjnSAat+f5Dq6cvoGTlkAj/OpRQQvmdvkZMgzYQP4wgjXD20nhpSiDWFWfDQkjKqpy8x7tSbGI/c
        NYQlY5j9BbV1VBM+NBo1fP3qZmpIIV6vL4Xk8eOonr5YomNuYLxxXEohBQTU4U7cQzPhQ4ub1X//UE8N
        KcSlF9ZBmM1K9fTFZLWREXBxIYVVmpHn6aSZ8GEKMd3VK0RGTW/QUT190ZhMZBf26zSa55o89SbNhA/S
        i5+/WEsNKQQZNTJ6NE9fyDUWs0VwEYU1xZHoaqGZ8OGIjoTzzWuoIYX48+9qIDzCTvX0RWNkRyCKiygs
        lzHMeoNmwkdcUuJdLaPHNpRAyoR0qqcv+hBzK2aL5SIKKwzPHO00Ez7SpmfCy34eI3pT6cmEWeXLqJ6+
        mGzhZBKP4iIKSy4ODu6mmfAx64nlsPyRadSQQsRG2sDfXd+R4CLL6GQuorACAgMDB3ShISdRu9UM37+7
        gxqUxumdlRBqxaPElS+pnr44J0wkIzCbiyisANSAb2Tx7hTYstT/81DmOBcUDmDDTMud3YHZfslFFFaw
        SCTyayMjB7GyXY0QPzkDpCoGFCoFvPL0Qmrg3hzftBhwlIH8UObryUfOktIeLLPOm1FQZvKTIM2kN6Xb
        d4PeFgaGOAdEVj0MqYdXQuLuYtCG6KA8byq0vP4bavgvDtSBTq8GiycdVLYQiBqb6tc8yK95ihyn93gz
        CspltFp5NzJyuR45bixoIizwwKYCGHNi7R2kHFgO4TPcoNWroDI/k11erx//NbtT712ZDzqDGiKXZnPP
        v7YGIlfMBPlwLUz0eNifHml1Ekq2bAdGq33Nm1FQOVGjkqn7QNmuBlDgnde+aBqMfnV1n/C9ce1ZDHbP
        BBgRbQFGrcDblBJCx8RA3ObCPs+6D1WCaaIThttt7IJAq/uJxn2Ad5UPvBkFVeyentXWuzBZKbJLlgAT
        YgDn1qI+AX4uHKVZIFUy+HruuiM8gcwXlV7f/5UStWLa/KJbPxYkEzU9Lw908XZIeXkFteKfE+e2BSA3
        aKCw7pk7GkDuxNiAM96Mglo2yVPANoCET83JAYMrCtyHq6gV3gsSG0tAYdLBnKrq/zegaGM9zgGdX3Mg
        LyFjEvsKTZk/HwxJUZB6tJpa0b0kqbkMGPNwWPTsb9kGzChe0hMUFLTJm1FQoRKZ7Na86tWgCg+BlEMV
        1AoGAzISclw0yL05LDqGHKdzuIj9SK5SnZQoFdgLpVTjwSR2Qz678pG/njCajEvYv8xSjbLFMm88jD4m
        vFwOBqa0+B+kDLPNm81vmRmj7lO5UXvbtmAqJOxcxG48tAruJbEr55KltQXzaLlYA9d4pclwRK7XfBMk
        l3ZrHZZb5rHOLlv22J7wRzLA9vgUcJRnQ/TaOezOTPaJhB0LIWlfKSTtL4OUgxW8JL+0nH0usaGYLRdX
        Xwix6z0QvXo22Bb9AozJMd34Kl/HDE4uyk+XDklGZiLFyCoJw2wlDVSHms6oQk1XGJP+PzKDpkWqVbXJ
        dOqOYKX8Fja8K0gu6wqSSW4HKWTdSJdMr+4kKEIMbYzFeENpMV5XR5iv4fnoH2q7+QKuQAfQvxBRIEMa
        0pCoGjbsf4Iqa3CNbV7VAAAAAElFTkSuQmCC
</value>
  </data>
</root>